@model  CalendarViewModel

<div id="divCalendarResults">
	<style type="text/css">
		.calendarCenter1 {
			width: 225px;
			margin: 0 auto;
			border: 1px solid transparent;
			text-align: center;
			padding-bottom: 10px;
		}

		.calendarCenter2 {
			width: 75%;
			margin: 0 auto;
			border: 1px solid transparent;
			text-align: center;
			padding-bottom: 10px;
		}

		.calendarEventDetailList {
			width: 600px;
			padding: 25px;
		}

		.leftAlignCell {
			text-align: left;
		}

		table.calendarGrid {
			margin: 0 auto !important;
			vertical-align: top;
		}

		.calendarEventDetailList td {
			vertical-align: top;
			margin-left: 4px;
			margin-right: 4px;
			padding-left: 4px;
			padding-right: 4px;
		}

		.calendarEventDetailList img {
			margin-left: 4px;
			margin-right: 4px;
			padding-left: 2px;
			padding-right: 2px;
		}

		.calendarEventDetailList table {
			border: 0;
		}

		.divCalendarDetailText {
			text-align: left;
			margin: 0.1em;
		}
	</style>

	<script type="text/javascript">
		$(document).ready(function () {
			doEventCalStyle();
		});

		$(document).ajaxComplete(function (event, xhr, settings) {
			doEventCalStyle();
		});

		function doEventCalStyle() {
			$(".eventDateRegion").each(function () {
				$(this).datepicker({
					changeMonth: true,
					changeYear: true,
					showOn: "both",
					constrainInput: true
				});
			});

			setTimeout(function () {
				$("#divCalendarResults button").addClass('btn btn-default btn btn-primary');
				$("#divCalendarResults button").button();
			}, 250);
		}
	</script>

	<script type="text/javascript">
		$(document).ready(function () {
			$('#CalendarInputDate').change(function () {
				PostSelected();
			});
		});

		function PostSelected() {
			$('#@Html.IdFor(m => m.MonthSelected)').val($('#CalendarInputDate').val());

			$('#btnSubmitCal').click();
		}

		function PostNext() {
			$('#@Html.IdFor(m => m.MonthSelected)').val($('#@Html.IdFor(m => m.MonthNext)').val());

			$('#btnSubmitCal').click();
		}

		function PostPrior() {
			$('#@Html.IdFor(m => m.MonthSelected)').val($('#@Html.IdFor(m => m.MonthPrior)').val());

			$('#btnSubmitCal').click();
		}
	</script>

	@if (!string.IsNullOrEmpty(Model.StyleSheetPath)) {
		<link href="@Model.StyleSheetPath" rel="stylesheet" type="text/css" />
	}

	@{
		Calendar cal = new Calendar();
		cal.HilightDateList = Model.SelectedDates;
		cal.CalendarDate = Model.MonthSelected;

		var grid = CarrotWeb.CarrotWebGrid(Model.MonthDates);

		grid.TableAttributes = new { @class = " " };
		grid.THeadAttributes = new { @class = " " };
		grid.EmptyDataTemplate = @<text><p> <b>No records found.</b> </p></text>;
grid.ConfigName(Html.NameFor(x => x.MonthDates));

grid
.AddColumn(x => x.EventDate, new CarrotGridColumn { HasHeadingText = false, CellFormatString = WebHelper.ShortDateFormatPattern })
.AddColumn(new CarrotGridTemplateColumn<vw_carrot_CalendarEvent> {
HasHeadingText = false,
BodyAttributes = new { @class = "leftAlignCell" },
FormatTemplate = @<text>
	@if (!item.IsAllDayEvent) {
		if (item.EventStartTime.HasValue && item.EventEndTime.HasValue) {
			@item.EventDate.ToString(WebHelper.ShortTimePattern)
			<span> - </span>
			@item.EventEndDate.ToString(WebHelper.ShortTimePattern)
		} else if (item.EventStartTime.HasValue) {
			@item.EventDate.ToString(WebHelper.ShortTimePattern)
		}
	}
</text>
			})
		.AddColumn(new CarrotGridTemplateColumn<vw_carrot_CalendarEvent> {
			HasHeadingText = false,
			BodyAttributes = new { @class = "leftAlignCell" },
			FormatTemplate = @<text>
	<div style="border: solid 1px @item.CategoryBGColor; background-color: @item.CategoryFGColor; padding: 1px;">
		<div style="border: solid 2px @item.CategoryFGColor; color: @item.CategoryFGColor; background-color: @item.CategoryBGColor; padding: 5px; margin: 1px;">
			<span style="font-weight: bold; color: @item.CategoryFGColor;">
				@item.EventTitle
				@if (item.IsCancelledSeries || item.IsCancelledEvent) {
					<span> (CANCELLED) </span>
				}
			</span>
		</div>
	</div>
	<div class="divCalendarDetailText">
		@Html.Raw(item.EventSeriesDetail)
		@Html.Raw(item.EventDetail)
	</div>
			</text>
					});
	}

	@if (Model.GenerateCss) {
		@cal.RenderHead()
	}

	@using (Ajax.BeginForm("EventCalendarDisplay", "Home",
					new { area = WebHelper.AssemblyName },
					new AjaxOptions {
						HttpMethod = "POST",
						InsertionMode = InsertionMode.Replace,
						UpdateTargetId = "divCalendarResults",
						OnFailure = "__carrotOnAjaxRequestFailure"
					})) {
		@Html.AntiForgeryToken()

		<div id="divDatePicker" class="calendarCenter1">
			@Html.TextBox("CalendarInputDate", string.Format(WebHelper.ShortDateFormatPattern, Model.MonthSelected), new { maxlength = "12", size = "16", style = "width: 120px; display:inline; margin:1em", @class = "eventDateRegion form-control-sm" })
		</div>

		<div class="calendarCenter2">
			<div class="calendarCenter2">
				@cal.RenderBody()
			</div>

			<input type="button" class="calendarbutton" id="btnLast " value="«««««" onclick="PostPrior();" />
			&nbsp;&nbsp;&nbsp;
			<input type="button" class="calendarbutton" id="btnNext " value="»»»»»" onclick="PostNext();" />
		</div>

		<div style="display:none;">
			@Html.TextBoxFor(m => m.MonthSelected, WebHelper.ShortDateFormatPattern, new { maxlength = "12", size = "16" })
			@Html.TextBoxFor(m => m.MonthPrior, WebHelper.ShortDateFormatPattern, new { maxlength = "12", size = "16" })
			@Html.TextBoxFor(m => m.MonthNext, WebHelper.ShortDateFormatPattern, new { maxlength = "12", size = "16" })
			@Html.HiddenFor(m => m.EncodedSettings)
			<input type="submit" id="btnSubmitCal" />
		</div>
	}

	<div class="calendarCenter2">
		<div class="calendarEventDetailList">
			@grid.OutputHtmlBody()
		</div>
	</div>

	<br />
	@foreach (var item in Model.Colors) {
		<div style="border: solid 1px @item.CategoryBGColor; background-color: @item.CategoryFGColor; padding: 1px;">
			<div style="border: solid 2px @item.CategoryFGColor; color: @item.CategoryFGColor; background-color: @item.CategoryBGColor; padding: 5px; margin: 1px;">
				<span style="font-weight: bold; color: @item.CategoryFGColor;"> @item.CategoryName </span>
			</div>
		</div>
	}
</div>
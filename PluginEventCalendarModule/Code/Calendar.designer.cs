#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarrotCake.CMS.Plugins.EventCalendarModule.Code
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CarrotwareCMS")]
	public partial class CalendarDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcarrot_CalendarEventCategory(carrot_CalendarEventCategory instance);
    partial void Updatecarrot_CalendarEventCategory(carrot_CalendarEventCategory instance);
    partial void Deletecarrot_CalendarEventCategory(carrot_CalendarEventCategory instance);
    partial void Insertcarrot_CalendarFrequency(carrot_CalendarFrequency instance);
    partial void Updatecarrot_CalendarFrequency(carrot_CalendarFrequency instance);
    partial void Deletecarrot_CalendarFrequency(carrot_CalendarFrequency instance);
    partial void Insertcarrot_CalendarEvent(carrot_CalendarEvent instance);
    partial void Updatecarrot_CalendarEvent(carrot_CalendarEvent instance);
    partial void Deletecarrot_CalendarEvent(carrot_CalendarEvent instance);
    partial void Insertcarrot_CalendarEventProfile(carrot_CalendarEventProfile instance);
    partial void Updatecarrot_CalendarEventProfile(carrot_CalendarEventProfile instance);
    partial void Deletecarrot_CalendarEventProfile(carrot_CalendarEventProfile instance);
    #endregion
		
		public CalendarDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CarrotwareCMSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CalendarDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CalendarDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CalendarDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CalendarDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<carrot_CalendarEventCategory> carrot_CalendarEventCategories
		{
			get
			{
				return this.GetTable<carrot_CalendarEventCategory>();
			}
		}
		
		public System.Data.Linq.Table<carrot_CalendarFrequency> carrot_CalendarFrequencies
		{
			get
			{
				return this.GetTable<carrot_CalendarFrequency>();
			}
		}
		
		public System.Data.Linq.Table<carrot_CalendarEvent> carrot_CalendarEvents
		{
			get
			{
				return this.GetTable<carrot_CalendarEvent>();
			}
		}
		
		public System.Data.Linq.Table<carrot_CalendarEventProfile> carrot_CalendarEventProfiles
		{
			get
			{
				return this.GetTable<carrot_CalendarEventProfile>();
			}
		}
		
		public System.Data.Linq.Table<vw_carrot_CalendarEvent> vw_carrot_CalendarEvents
		{
			get
			{
				return this.GetTable<vw_carrot_CalendarEvent>();
			}
		}
		
		public System.Data.Linq.Table<vw_carrot_CalendarEventProfile> vw_carrot_CalendarEventProfiles
		{
			get
			{
				return this.GetTable<vw_carrot_CalendarEventProfile>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.carrot_CalendarEventCategory")]
	public partial class carrot_CalendarEventCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CalendarEventCategoryID;
		
		private string _CategoryFGColor;
		
		private string _CategoryBGColor;
		
		private string _CategoryName;
		
		private System.Guid _SiteID;
		
		private EntitySet<carrot_CalendarEventProfile> _carrot_CalendarEventProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalendarEventCategoryIDChanging(System.Guid value);
    partial void OnCalendarEventCategoryIDChanged();
    partial void OnCategoryFGColorChanging(string value);
    partial void OnCategoryFGColorChanged();
    partial void OnCategoryBGColorChanging(string value);
    partial void OnCategoryBGColorChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    #endregion
		
		public carrot_CalendarEventCategory()
		{
			this._carrot_CalendarEventProfiles = new EntitySet<carrot_CalendarEventProfile>(new Action<carrot_CalendarEventProfile>(this.attach_carrot_CalendarEventProfiles), new Action<carrot_CalendarEventProfile>(this.detach_carrot_CalendarEventProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarEventCategoryID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CalendarEventCategoryID
		{
			get
			{
				return this._CalendarEventCategoryID;
			}
			set
			{
				if ((this._CalendarEventCategoryID != value))
				{
					this.OnCalendarEventCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CalendarEventCategoryID = value;
					this.SendPropertyChanged("CalendarEventCategoryID");
					this.OnCalendarEventCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryFGColor", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string CategoryFGColor
		{
			get
			{
				return this._CategoryFGColor;
			}
			set
			{
				if ((this._CategoryFGColor != value))
				{
					this.OnCategoryFGColorChanging(value);
					this.SendPropertyChanging();
					this._CategoryFGColor = value;
					this.SendPropertyChanged("CategoryFGColor");
					this.OnCategoryFGColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryBGColor", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string CategoryBGColor
		{
			get
			{
				return this._CategoryBGColor;
			}
			set
			{
				if ((this._CategoryBGColor != value))
				{
					this.OnCategoryBGColorChanging(value);
					this.SendPropertyChanging();
					this._CategoryBGColor = value;
					this.SendPropertyChanged("CategoryBGColor");
					this.OnCategoryBGColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="carrot_CalendarEventCategory_carrot_CalendarEventProfile", Storage="_carrot_CalendarEventProfiles", ThisKey="CalendarEventCategoryID", OtherKey="CalendarEventCategoryID")]
		public EntitySet<carrot_CalendarEventProfile> carrot_CalendarEventProfiles
		{
			get
			{
				return this._carrot_CalendarEventProfiles;
			}
			set
			{
				this._carrot_CalendarEventProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_carrot_CalendarEventProfiles(carrot_CalendarEventProfile entity)
		{
			this.SendPropertyChanging();
			entity.carrot_CalendarEventCategory = this;
		}
		
		private void detach_carrot_CalendarEventProfiles(carrot_CalendarEventProfile entity)
		{
			this.SendPropertyChanging();
			entity.carrot_CalendarEventCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.carrot_CalendarFrequency")]
	public partial class carrot_CalendarFrequency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CalendarFrequencyID;
		
		private int _FrequencySortOrder;
		
		private string _FrequencyValue;
		
		private string _FrequencyName;
		
		private EntitySet<carrot_CalendarEventProfile> _carrot_CalendarEventProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalendarFrequencyIDChanging(System.Guid value);
    partial void OnCalendarFrequencyIDChanged();
    partial void OnFrequencySortOrderChanging(int value);
    partial void OnFrequencySortOrderChanged();
    partial void OnFrequencyValueChanging(string value);
    partial void OnFrequencyValueChanged();
    partial void OnFrequencyNameChanging(string value);
    partial void OnFrequencyNameChanged();
    #endregion
		
		public carrot_CalendarFrequency()
		{
			this._carrot_CalendarEventProfiles = new EntitySet<carrot_CalendarEventProfile>(new Action<carrot_CalendarEventProfile>(this.attach_carrot_CalendarEventProfiles), new Action<carrot_CalendarEventProfile>(this.detach_carrot_CalendarEventProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarFrequencyID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CalendarFrequencyID
		{
			get
			{
				return this._CalendarFrequencyID;
			}
			set
			{
				if ((this._CalendarFrequencyID != value))
				{
					this.OnCalendarFrequencyIDChanging(value);
					this.SendPropertyChanging();
					this._CalendarFrequencyID = value;
					this.SendPropertyChanged("CalendarFrequencyID");
					this.OnCalendarFrequencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencySortOrder", DbType="Int NOT NULL")]
		public int FrequencySortOrder
		{
			get
			{
				return this._FrequencySortOrder;
			}
			set
			{
				if ((this._FrequencySortOrder != value))
				{
					this.OnFrequencySortOrderChanging(value);
					this.SendPropertyChanging();
					this._FrequencySortOrder = value;
					this.SendPropertyChanged("FrequencySortOrder");
					this.OnFrequencySortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencyValue", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string FrequencyValue
		{
			get
			{
				return this._FrequencyValue;
			}
			set
			{
				if ((this._FrequencyValue != value))
				{
					this.OnFrequencyValueChanging(value);
					this.SendPropertyChanging();
					this._FrequencyValue = value;
					this.SendPropertyChanged("FrequencyValue");
					this.OnFrequencyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencyName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string FrequencyName
		{
			get
			{
				return this._FrequencyName;
			}
			set
			{
				if ((this._FrequencyName != value))
				{
					this.OnFrequencyNameChanging(value);
					this.SendPropertyChanging();
					this._FrequencyName = value;
					this.SendPropertyChanged("FrequencyName");
					this.OnFrequencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="carrot_CalendarFrequency_carrot_CalendarEventProfile", Storage="_carrot_CalendarEventProfiles", ThisKey="CalendarFrequencyID", OtherKey="CalendarFrequencyID")]
		public EntitySet<carrot_CalendarEventProfile> carrot_CalendarEventProfiles
		{
			get
			{
				return this._carrot_CalendarEventProfiles;
			}
			set
			{
				this._carrot_CalendarEventProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_carrot_CalendarEventProfiles(carrot_CalendarEventProfile entity)
		{
			this.SendPropertyChanging();
			entity.carrot_CalendarFrequency = this;
		}
		
		private void detach_carrot_CalendarEventProfiles(carrot_CalendarEventProfile entity)
		{
			this.SendPropertyChanging();
			entity.carrot_CalendarFrequency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.carrot_CalendarEvent")]
	public partial class carrot_CalendarEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CalendarEventID;
		
		private System.Guid _CalendarEventProfileID;
		
		private System.DateTime _EventDate;
		
		private string _EventDetail;
		
		private bool _IsCancelled;
		
		private System.Nullable<System.TimeSpan> _EventStartTime;
		
		private System.Nullable<System.TimeSpan> _EventEndTime;
		
		private EntityRef<carrot_CalendarEventProfile> _carrot_CalendarEventProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalendarEventIDChanging(System.Guid value);
    partial void OnCalendarEventIDChanged();
    partial void OnCalendarEventProfileIDChanging(System.Guid value);
    partial void OnCalendarEventProfileIDChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnEventDetailChanging(string value);
    partial void OnEventDetailChanged();
    partial void OnIsCancelledChanging(bool value);
    partial void OnIsCancelledChanged();
    partial void OnEventStartTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnEventStartTimeChanged();
    partial void OnEventEndTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnEventEndTimeChanged();
    #endregion
		
		public carrot_CalendarEvent()
		{
			this._carrot_CalendarEventProfile = default(EntityRef<carrot_CalendarEventProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarEventID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CalendarEventID
		{
			get
			{
				return this._CalendarEventID;
			}
			set
			{
				if ((this._CalendarEventID != value))
				{
					this.OnCalendarEventIDChanging(value);
					this.SendPropertyChanging();
					this._CalendarEventID = value;
					this.SendPropertyChanged("CalendarEventID");
					this.OnCalendarEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarEventProfileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CalendarEventProfileID
		{
			get
			{
				return this._CalendarEventProfileID;
			}
			set
			{
				if ((this._CalendarEventProfileID != value))
				{
					if (this._carrot_CalendarEventProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalendarEventProfileIDChanging(value);
					this.SendPropertyChanging();
					this._CalendarEventProfileID = value;
					this.SendPropertyChanged("CalendarEventProfileID");
					this.OnCalendarEventProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetail", DbType="VarChar(MAX)")]
		public string EventDetail
		{
			get
			{
				return this._EventDetail;
			}
			set
			{
				if ((this._EventDetail != value))
				{
					this.OnEventDetailChanging(value);
					this.SendPropertyChanging();
					this._EventDetail = value;
					this.SendPropertyChanged("EventDetail");
					this.OnEventDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStartTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> EventStartTime
		{
			get
			{
				return this._EventStartTime;
			}
			set
			{
				if ((this._EventStartTime != value))
				{
					this.OnEventStartTimeChanging(value);
					this.SendPropertyChanging();
					this._EventStartTime = value;
					this.SendPropertyChanged("EventStartTime");
					this.OnEventStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEndTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> EventEndTime
		{
			get
			{
				return this._EventEndTime;
			}
			set
			{
				if ((this._EventEndTime != value))
				{
					this.OnEventEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EventEndTime = value;
					this.SendPropertyChanged("EventEndTime");
					this.OnEventEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="carrot_CalendarEventProfile_carrot_CalendarEvent", Storage="_carrot_CalendarEventProfile", ThisKey="CalendarEventProfileID", OtherKey="CalendarEventProfileID", IsForeignKey=true)]
		public carrot_CalendarEventProfile carrot_CalendarEventProfile
		{
			get
			{
				return this._carrot_CalendarEventProfile.Entity;
			}
			set
			{
				carrot_CalendarEventProfile previousValue = this._carrot_CalendarEventProfile.Entity;
				if (((previousValue != value) 
							|| (this._carrot_CalendarEventProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._carrot_CalendarEventProfile.Entity = null;
						previousValue.carrot_CalendarEvents.Remove(this);
					}
					this._carrot_CalendarEventProfile.Entity = value;
					if ((value != null))
					{
						value.carrot_CalendarEvents.Add(this);
						this._CalendarEventProfileID = value.CalendarEventProfileID;
					}
					else
					{
						this._CalendarEventProfileID = default(System.Guid);
					}
					this.SendPropertyChanged("carrot_CalendarEventProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.carrot_CalendarEventProfile")]
	public partial class carrot_CalendarEventProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CalendarEventProfileID;
		
		private System.Guid _CalendarFrequencyID;
		
		private System.Guid _CalendarEventCategoryID;
		
		private System.DateTime _EventStartDate;
		
		private System.Nullable<System.TimeSpan> _EventStartTime;
		
		private System.DateTime _EventEndDate;
		
		private System.Nullable<System.TimeSpan> _EventEndTime;
		
		private string _EventTitle;
		
		private string _EventDetail;
		
		private System.Nullable<int> _EventRepeatPattern;
		
		private bool _IsAllDayEvent;
		
		private bool _IsPublic;
		
		private bool _IsCancelled;
		
		private bool _IsCancelledPublic;
		
		private System.Guid _SiteID;
		
		private bool _IsHoliday;
		
		private bool _IsAnnualHoliday;
		
		private int _RecursEvery;
		
		private EntitySet<carrot_CalendarEvent> _carrot_CalendarEvents;
		
		private EntityRef<carrot_CalendarEventCategory> _carrot_CalendarEventCategory;
		
		private EntityRef<carrot_CalendarFrequency> _carrot_CalendarFrequency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalendarEventProfileIDChanging(System.Guid value);
    partial void OnCalendarEventProfileIDChanged();
    partial void OnCalendarFrequencyIDChanging(System.Guid value);
    partial void OnCalendarFrequencyIDChanged();
    partial void OnCalendarEventCategoryIDChanging(System.Guid value);
    partial void OnCalendarEventCategoryIDChanged();
    partial void OnEventStartDateChanging(System.DateTime value);
    partial void OnEventStartDateChanged();
    partial void OnEventStartTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnEventStartTimeChanged();
    partial void OnEventEndDateChanging(System.DateTime value);
    partial void OnEventEndDateChanged();
    partial void OnEventEndTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnEventEndTimeChanged();
    partial void OnEventTitleChanging(string value);
    partial void OnEventTitleChanged();
    partial void OnEventDetailChanging(string value);
    partial void OnEventDetailChanged();
    partial void OnEventRepeatPatternChanging(System.Nullable<int> value);
    partial void OnEventRepeatPatternChanged();
    partial void OnIsAllDayEventChanging(bool value);
    partial void OnIsAllDayEventChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnIsCancelledChanging(bool value);
    partial void OnIsCancelledChanged();
    partial void OnIsCancelledPublicChanging(bool value);
    partial void OnIsCancelledPublicChanged();
    partial void OnSiteIDChanging(System.Guid value);
    partial void OnSiteIDChanged();
    partial void OnIsHolidayChanging(bool value);
    partial void OnIsHolidayChanged();
    partial void OnIsAnnualHolidayChanging(bool value);
    partial void OnIsAnnualHolidayChanged();
    partial void OnRecursEveryChanging(int value);
    partial void OnRecursEveryChanged();
    #endregion
		
		public carrot_CalendarEventProfile()
		{
			this._carrot_CalendarEvents = new EntitySet<carrot_CalendarEvent>(new Action<carrot_CalendarEvent>(this.attach_carrot_CalendarEvents), new Action<carrot_CalendarEvent>(this.detach_carrot_CalendarEvents));
			this._carrot_CalendarEventCategory = default(EntityRef<carrot_CalendarEventCategory>);
			this._carrot_CalendarFrequency = default(EntityRef<carrot_CalendarFrequency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarEventProfileID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CalendarEventProfileID
		{
			get
			{
				return this._CalendarEventProfileID;
			}
			set
			{
				if ((this._CalendarEventProfileID != value))
				{
					this.OnCalendarEventProfileIDChanging(value);
					this.SendPropertyChanging();
					this._CalendarEventProfileID = value;
					this.SendPropertyChanged("CalendarEventProfileID");
					this.OnCalendarEventProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarFrequencyID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CalendarFrequencyID
		{
			get
			{
				return this._CalendarFrequencyID;
			}
			set
			{
				if ((this._CalendarFrequencyID != value))
				{
					if (this._carrot_CalendarFrequency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalendarFrequencyIDChanging(value);
					this.SendPropertyChanging();
					this._CalendarFrequencyID = value;
					this.SendPropertyChanged("CalendarFrequencyID");
					this.OnCalendarFrequencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarEventCategoryID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CalendarEventCategoryID
		{
			get
			{
				return this._CalendarEventCategoryID;
			}
			set
			{
				if ((this._CalendarEventCategoryID != value))
				{
					if (this._carrot_CalendarEventCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalendarEventCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CalendarEventCategoryID = value;
					this.SendPropertyChanged("CalendarEventCategoryID");
					this.OnCalendarEventCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventStartDate
		{
			get
			{
				return this._EventStartDate;
			}
			set
			{
				if ((this._EventStartDate != value))
				{
					this.OnEventStartDateChanging(value);
					this.SendPropertyChanging();
					this._EventStartDate = value;
					this.SendPropertyChanged("EventStartDate");
					this.OnEventStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStartTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> EventStartTime
		{
			get
			{
				return this._EventStartTime;
			}
			set
			{
				if ((this._EventStartTime != value))
				{
					this.OnEventStartTimeChanging(value);
					this.SendPropertyChanging();
					this._EventStartTime = value;
					this.SendPropertyChanged("EventStartTime");
					this.OnEventStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventEndDate
		{
			get
			{
				return this._EventEndDate;
			}
			set
			{
				if ((this._EventEndDate != value))
				{
					this.OnEventEndDateChanging(value);
					this.SendPropertyChanging();
					this._EventEndDate = value;
					this.SendPropertyChanged("EventEndDate");
					this.OnEventEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEndTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> EventEndTime
		{
			get
			{
				return this._EventEndTime;
			}
			set
			{
				if ((this._EventEndTime != value))
				{
					this.OnEventEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EventEndTime = value;
					this.SendPropertyChanged("EventEndTime");
					this.OnEventEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTitle", DbType="VarChar(256)")]
		public string EventTitle
		{
			get
			{
				return this._EventTitle;
			}
			set
			{
				if ((this._EventTitle != value))
				{
					this.OnEventTitleChanging(value);
					this.SendPropertyChanging();
					this._EventTitle = value;
					this.SendPropertyChanged("EventTitle");
					this.OnEventTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetail", DbType="VarChar(MAX)")]
		public string EventDetail
		{
			get
			{
				return this._EventDetail;
			}
			set
			{
				if ((this._EventDetail != value))
				{
					this.OnEventDetailChanging(value);
					this.SendPropertyChanging();
					this._EventDetail = value;
					this.SendPropertyChanged("EventDetail");
					this.OnEventDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventRepeatPattern", DbType="Int")]
		public System.Nullable<int> EventRepeatPattern
		{
			get
			{
				return this._EventRepeatPattern;
			}
			set
			{
				if ((this._EventRepeatPattern != value))
				{
					this.OnEventRepeatPatternChanging(value);
					this.SendPropertyChanging();
					this._EventRepeatPattern = value;
					this.SendPropertyChanged("EventRepeatPattern");
					this.OnEventRepeatPatternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllDayEvent", DbType="Bit NOT NULL")]
		public bool IsAllDayEvent
		{
			get
			{
				return this._IsAllDayEvent;
			}
			set
			{
				if ((this._IsAllDayEvent != value))
				{
					this.OnIsAllDayEventChanging(value);
					this.SendPropertyChanging();
					this._IsAllDayEvent = value;
					this.SendPropertyChanged("IsAllDayEvent");
					this.OnIsAllDayEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelledPublic", DbType="Bit NOT NULL")]
		public bool IsCancelledPublic
		{
			get
			{
				return this._IsCancelledPublic;
			}
			set
			{
				if ((this._IsCancelledPublic != value))
				{
					this.OnIsCancelledPublicChanging(value);
					this.SendPropertyChanging();
					this._IsCancelledPublic = value;
					this.SendPropertyChanged("IsCancelledPublic");
					this.OnIsCancelledPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this.OnSiteIDChanging(value);
					this.SendPropertyChanging();
					this._SiteID = value;
					this.SendPropertyChanged("SiteID");
					this.OnSiteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHoliday", DbType="Bit NOT NULL")]
		public bool IsHoliday
		{
			get
			{
				return this._IsHoliday;
			}
			set
			{
				if ((this._IsHoliday != value))
				{
					this.OnIsHolidayChanging(value);
					this.SendPropertyChanging();
					this._IsHoliday = value;
					this.SendPropertyChanged("IsHoliday");
					this.OnIsHolidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnnualHoliday", DbType="Bit NOT NULL")]
		public bool IsAnnualHoliday
		{
			get
			{
				return this._IsAnnualHoliday;
			}
			set
			{
				if ((this._IsAnnualHoliday != value))
				{
					this.OnIsAnnualHolidayChanging(value);
					this.SendPropertyChanging();
					this._IsAnnualHoliday = value;
					this.SendPropertyChanged("IsAnnualHoliday");
					this.OnIsAnnualHolidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecursEvery", DbType="Int NOT NULL")]
		public int RecursEvery
		{
			get
			{
				return this._RecursEvery;
			}
			set
			{
				if ((this._RecursEvery != value))
				{
					this.OnRecursEveryChanging(value);
					this.SendPropertyChanging();
					this._RecursEvery = value;
					this.SendPropertyChanged("RecursEvery");
					this.OnRecursEveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="carrot_CalendarEventProfile_carrot_CalendarEvent", Storage="_carrot_CalendarEvents", ThisKey="CalendarEventProfileID", OtherKey="CalendarEventProfileID")]
		public EntitySet<carrot_CalendarEvent> carrot_CalendarEvents
		{
			get
			{
				return this._carrot_CalendarEvents;
			}
			set
			{
				this._carrot_CalendarEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="carrot_CalendarEventCategory_carrot_CalendarEventProfile", Storage="_carrot_CalendarEventCategory", ThisKey="CalendarEventCategoryID", OtherKey="CalendarEventCategoryID", IsForeignKey=true)]
		public carrot_CalendarEventCategory carrot_CalendarEventCategory
		{
			get
			{
				return this._carrot_CalendarEventCategory.Entity;
			}
			set
			{
				carrot_CalendarEventCategory previousValue = this._carrot_CalendarEventCategory.Entity;
				if (((previousValue != value) 
							|| (this._carrot_CalendarEventCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._carrot_CalendarEventCategory.Entity = null;
						previousValue.carrot_CalendarEventProfiles.Remove(this);
					}
					this._carrot_CalendarEventCategory.Entity = value;
					if ((value != null))
					{
						value.carrot_CalendarEventProfiles.Add(this);
						this._CalendarEventCategoryID = value.CalendarEventCategoryID;
					}
					else
					{
						this._CalendarEventCategoryID = default(System.Guid);
					}
					this.SendPropertyChanged("carrot_CalendarEventCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="carrot_CalendarFrequency_carrot_CalendarEventProfile", Storage="_carrot_CalendarFrequency", ThisKey="CalendarFrequencyID", OtherKey="CalendarFrequencyID", IsForeignKey=true)]
		public carrot_CalendarFrequency carrot_CalendarFrequency
		{
			get
			{
				return this._carrot_CalendarFrequency.Entity;
			}
			set
			{
				carrot_CalendarFrequency previousValue = this._carrot_CalendarFrequency.Entity;
				if (((previousValue != value) 
							|| (this._carrot_CalendarFrequency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._carrot_CalendarFrequency.Entity = null;
						previousValue.carrot_CalendarEventProfiles.Remove(this);
					}
					this._carrot_CalendarFrequency.Entity = value;
					if ((value != null))
					{
						value.carrot_CalendarEventProfiles.Add(this);
						this._CalendarFrequencyID = value.CalendarFrequencyID;
					}
					else
					{
						this._CalendarFrequencyID = default(System.Guid);
					}
					this.SendPropertyChanged("carrot_CalendarFrequency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_carrot_CalendarEvents(carrot_CalendarEvent entity)
		{
			this.SendPropertyChanging();
			entity.carrot_CalendarEventProfile = this;
		}
		
		private void detach_carrot_CalendarEvents(carrot_CalendarEvent entity)
		{
			this.SendPropertyChanging();
			entity.carrot_CalendarEventProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_carrot_CalendarEvent")]
	public partial class vw_carrot_CalendarEvent
	{
		
		private System.Guid _SiteID;
		
		private System.Guid _CalendarEventProfileID;
		
		private System.Guid _CalendarFrequencyID;
		
		private System.Guid _CalendarEventCategoryID;
		
		private System.DateTime _EventStartDate;
		
		private System.DateTime _EventEndDate;
		
		private System.Nullable<System.TimeSpan> _EventStartTime;
		
		private System.Nullable<System.TimeSpan> _EventEndTime;
		
		private string _EventTitle;
		
		private System.Nullable<int> _EventRepeatPattern;
		
		private string _EventSeriesDetail;
		
		private bool _IsCancelledPublic;
		
		private bool _IsAllDayEvent;
		
		private bool _IsPublic;
		
		private bool _IsCancelledSeries;
		
		private bool _IsCancelledEvent;
		
		private bool _IsHoliday;
		
		private bool _IsAnnualHoliday;
		
		private int _RecursEvery;
		
		private System.Guid _CalendarEventID;
		
		private System.DateTime _EventDate;
		
		private string _EventDetail;
		
		private string _FrequencyValue;
		
		private string _FrequencyName;
		
		private int _FrequencySortOrder;
		
		private System.Nullable<System.TimeSpan> _EventStartTimeOverride;
		
		private System.Nullable<System.TimeSpan> _EventEndTimeOverride;
		
		private string _CategoryFGColor;
		
		private string _CategoryBGColor;
		
		private string _CategoryName;
		
		public vw_carrot_CalendarEvent()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarEventProfileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CalendarEventProfileID
		{
			get
			{
				return this._CalendarEventProfileID;
			}
			set
			{
				if ((this._CalendarEventProfileID != value))
				{
					this._CalendarEventProfileID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarFrequencyID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CalendarFrequencyID
		{
			get
			{
				return this._CalendarFrequencyID;
			}
			set
			{
				if ((this._CalendarFrequencyID != value))
				{
					this._CalendarFrequencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarEventCategoryID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CalendarEventCategoryID
		{
			get
			{
				return this._CalendarEventCategoryID;
			}
			set
			{
				if ((this._CalendarEventCategoryID != value))
				{
					this._CalendarEventCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventStartDate
		{
			get
			{
				return this._EventStartDate;
			}
			set
			{
				if ((this._EventStartDate != value))
				{
					this._EventStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventEndDate
		{
			get
			{
				return this._EventEndDate;
			}
			set
			{
				if ((this._EventEndDate != value))
				{
					this._EventEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStartTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> EventStartTime
		{
			get
			{
				return this._EventStartTime;
			}
			set
			{
				if ((this._EventStartTime != value))
				{
					this._EventStartTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEndTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> EventEndTime
		{
			get
			{
				return this._EventEndTime;
			}
			set
			{
				if ((this._EventEndTime != value))
				{
					this._EventEndTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTitle", DbType="VarChar(256)")]
		public string EventTitle
		{
			get
			{
				return this._EventTitle;
			}
			set
			{
				if ((this._EventTitle != value))
				{
					this._EventTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventRepeatPattern", DbType="Int")]
		public System.Nullable<int> EventRepeatPattern
		{
			get
			{
				return this._EventRepeatPattern;
			}
			set
			{
				if ((this._EventRepeatPattern != value))
				{
					this._EventRepeatPattern = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSeriesDetail", DbType="VarChar(MAX)")]
		public string EventSeriesDetail
		{
			get
			{
				return this._EventSeriesDetail;
			}
			set
			{
				if ((this._EventSeriesDetail != value))
				{
					this._EventSeriesDetail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelledPublic", DbType="Bit NOT NULL")]
		public bool IsCancelledPublic
		{
			get
			{
				return this._IsCancelledPublic;
			}
			set
			{
				if ((this._IsCancelledPublic != value))
				{
					this._IsCancelledPublic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllDayEvent", DbType="Bit NOT NULL")]
		public bool IsAllDayEvent
		{
			get
			{
				return this._IsAllDayEvent;
			}
			set
			{
				if ((this._IsAllDayEvent != value))
				{
					this._IsAllDayEvent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this._IsPublic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelledSeries", DbType="Bit NOT NULL")]
		public bool IsCancelledSeries
		{
			get
			{
				return this._IsCancelledSeries;
			}
			set
			{
				if ((this._IsCancelledSeries != value))
				{
					this._IsCancelledSeries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelledEvent", DbType="Bit NOT NULL")]
		public bool IsCancelledEvent
		{
			get
			{
				return this._IsCancelledEvent;
			}
			set
			{
				if ((this._IsCancelledEvent != value))
				{
					this._IsCancelledEvent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHoliday", DbType="Bit NOT NULL")]
		public bool IsHoliday
		{
			get
			{
				return this._IsHoliday;
			}
			set
			{
				if ((this._IsHoliday != value))
				{
					this._IsHoliday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnnualHoliday", DbType="Bit NOT NULL")]
		public bool IsAnnualHoliday
		{
			get
			{
				return this._IsAnnualHoliday;
			}
			set
			{
				if ((this._IsAnnualHoliday != value))
				{
					this._IsAnnualHoliday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecursEvery", DbType="Int NOT NULL")]
		public int RecursEvery
		{
			get
			{
				return this._RecursEvery;
			}
			set
			{
				if ((this._RecursEvery != value))
				{
					this._RecursEvery = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarEventID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CalendarEventID
		{
			get
			{
				return this._CalendarEventID;
			}
			set
			{
				if ((this._CalendarEventID != value))
				{
					this._CalendarEventID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this._EventDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetail", DbType="VarChar(MAX)")]
		public string EventDetail
		{
			get
			{
				return this._EventDetail;
			}
			set
			{
				if ((this._EventDetail != value))
				{
					this._EventDetail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencyValue", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string FrequencyValue
		{
			get
			{
				return this._FrequencyValue;
			}
			set
			{
				if ((this._FrequencyValue != value))
				{
					this._FrequencyValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencyName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string FrequencyName
		{
			get
			{
				return this._FrequencyName;
			}
			set
			{
				if ((this._FrequencyName != value))
				{
					this._FrequencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencySortOrder", DbType="Int NOT NULL")]
		public int FrequencySortOrder
		{
			get
			{
				return this._FrequencySortOrder;
			}
			set
			{
				if ((this._FrequencySortOrder != value))
				{
					this._FrequencySortOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStartTimeOverride", DbType="Time")]
		public System.Nullable<System.TimeSpan> EventStartTimeOverride
		{
			get
			{
				return this._EventStartTimeOverride;
			}
			set
			{
				if ((this._EventStartTimeOverride != value))
				{
					this._EventStartTimeOverride = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEndTimeOverride", DbType="Time")]
		public System.Nullable<System.TimeSpan> EventEndTimeOverride
		{
			get
			{
				return this._EventEndTimeOverride;
			}
			set
			{
				if ((this._EventEndTimeOverride != value))
				{
					this._EventEndTimeOverride = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryFGColor", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string CategoryFGColor
		{
			get
			{
				return this._CategoryFGColor;
			}
			set
			{
				if ((this._CategoryFGColor != value))
				{
					this._CategoryFGColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryBGColor", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string CategoryBGColor
		{
			get
			{
				return this._CategoryBGColor;
			}
			set
			{
				if ((this._CategoryBGColor != value))
				{
					this._CategoryBGColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_carrot_CalendarEventProfile")]
	public partial class vw_carrot_CalendarEventProfile
	{
		
		private System.Guid _SiteID;
		
		private System.Guid _CalendarEventProfileID;
		
		private System.Guid _CalendarFrequencyID;
		
		private System.Guid _CalendarEventCategoryID;
		
		private System.DateTime _EventStartDate;
		
		private System.Nullable<System.TimeSpan> _EventStartTime;
		
		private System.DateTime _EventEndDate;
		
		private System.Nullable<System.TimeSpan> _EventEndTime;
		
		private string _EventTitle;
		
		private System.Nullable<int> _EventRepeatPattern;
		
		private string _EventDetail;
		
		private bool _IsCancelled;
		
		private bool _IsCancelledPublic;
		
		private bool _IsHoliday;
		
		private bool _IsAnnualHoliday;
		
		private bool _IsAllDayEvent;
		
		private int _RecursEvery;
		
		private bool _IsPublic;
		
		private string _FrequencyValue;
		
		private string _FrequencyName;
		
		private int _FrequencySortOrder;
		
		private string _CategoryFGColor;
		
		private string _CategoryBGColor;
		
		private string _CategoryName;
		
		public vw_carrot_CalendarEventProfile()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SiteID
		{
			get
			{
				return this._SiteID;
			}
			set
			{
				if ((this._SiteID != value))
				{
					this._SiteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarEventProfileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CalendarEventProfileID
		{
			get
			{
				return this._CalendarEventProfileID;
			}
			set
			{
				if ((this._CalendarEventProfileID != value))
				{
					this._CalendarEventProfileID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarFrequencyID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CalendarFrequencyID
		{
			get
			{
				return this._CalendarFrequencyID;
			}
			set
			{
				if ((this._CalendarFrequencyID != value))
				{
					this._CalendarFrequencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalendarEventCategoryID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CalendarEventCategoryID
		{
			get
			{
				return this._CalendarEventCategoryID;
			}
			set
			{
				if ((this._CalendarEventCategoryID != value))
				{
					this._CalendarEventCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventStartDate
		{
			get
			{
				return this._EventStartDate;
			}
			set
			{
				if ((this._EventStartDate != value))
				{
					this._EventStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStartTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> EventStartTime
		{
			get
			{
				return this._EventStartTime;
			}
			set
			{
				if ((this._EventStartTime != value))
				{
					this._EventStartTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventEndDate
		{
			get
			{
				return this._EventEndDate;
			}
			set
			{
				if ((this._EventEndDate != value))
				{
					this._EventEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEndTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> EventEndTime
		{
			get
			{
				return this._EventEndTime;
			}
			set
			{
				if ((this._EventEndTime != value))
				{
					this._EventEndTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTitle", DbType="VarChar(256)")]
		public string EventTitle
		{
			get
			{
				return this._EventTitle;
			}
			set
			{
				if ((this._EventTitle != value))
				{
					this._EventTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventRepeatPattern", DbType="Int")]
		public System.Nullable<int> EventRepeatPattern
		{
			get
			{
				return this._EventRepeatPattern;
			}
			set
			{
				if ((this._EventRepeatPattern != value))
				{
					this._EventRepeatPattern = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetail", DbType="VarChar(MAX)")]
		public string EventDetail
		{
			get
			{
				return this._EventDetail;
			}
			set
			{
				if ((this._EventDetail != value))
				{
					this._EventDetail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this._IsCancelled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelledPublic", DbType="Bit NOT NULL")]
		public bool IsCancelledPublic
		{
			get
			{
				return this._IsCancelledPublic;
			}
			set
			{
				if ((this._IsCancelledPublic != value))
				{
					this._IsCancelledPublic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHoliday", DbType="Bit NOT NULL")]
		public bool IsHoliday
		{
			get
			{
				return this._IsHoliday;
			}
			set
			{
				if ((this._IsHoliday != value))
				{
					this._IsHoliday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnnualHoliday", DbType="Bit NOT NULL")]
		public bool IsAnnualHoliday
		{
			get
			{
				return this._IsAnnualHoliday;
			}
			set
			{
				if ((this._IsAnnualHoliday != value))
				{
					this._IsAnnualHoliday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllDayEvent", DbType="Bit NOT NULL")]
		public bool IsAllDayEvent
		{
			get
			{
				return this._IsAllDayEvent;
			}
			set
			{
				if ((this._IsAllDayEvent != value))
				{
					this._IsAllDayEvent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecursEvery", DbType="Int NOT NULL")]
		public int RecursEvery
		{
			get
			{
				return this._RecursEvery;
			}
			set
			{
				if ((this._RecursEvery != value))
				{
					this._RecursEvery = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this._IsPublic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencyValue", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string FrequencyValue
		{
			get
			{
				return this._FrequencyValue;
			}
			set
			{
				if ((this._FrequencyValue != value))
				{
					this._FrequencyValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencyName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string FrequencyName
		{
			get
			{
				return this._FrequencyName;
			}
			set
			{
				if ((this._FrequencyName != value))
				{
					this._FrequencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencySortOrder", DbType="Int NOT NULL")]
		public int FrequencySortOrder
		{
			get
			{
				return this._FrequencySortOrder;
			}
			set
			{
				if ((this._FrequencySortOrder != value))
				{
					this._FrequencySortOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryFGColor", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string CategoryFGColor
		{
			get
			{
				return this._CategoryFGColor;
			}
			set
			{
				if ((this._CategoryFGColor != value))
				{
					this._CategoryFGColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryBGColor", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string CategoryBGColor
		{
			get
			{
				return this._CategoryBGColor;
			}
			set
			{
				if ((this._CategoryBGColor != value))
				{
					this._CategoryBGColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
